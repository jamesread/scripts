#!/bin/bash
# .profile for James Read <contact@jwread.com>

if type sudo >/dev/null 2>&1 && [ "$UID" -ne 0 ]; then
	sudo="sudo"
else
	sudo=""
fi

# @param $1 source
# @param $2 destination
function getFile() {
	echo "getFile: $1 -> $2"

	if which wget &> /dev/null; then
		wget -nv $1 -O $2
	elif which curl &> /dev/null; then
		curl $1 -o $2 
	else
		echo "Neither wget or curl are available :("
	fi
}

# @param $1 The group.
function fixPerms() {
	$sudo find -exec chown $1:$1 {} +
	$sudo find -exec chmod g+rw {} +
}

if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

export GOPATH=~/sandbox/go

PATH="$HOME/.bin/:/usr/bin/:/bin/:/usr/local/bin/:/sbin/:/usr/sbin/:/usr/local/sbin/:/usr/local/sbin/nix/:/usr/share/upsilon-node/tools/:./node_modules/.bin/:~/scripts/utils/:$GOPATH/bin/"

if [ ! -e "$HOME/.pathexts" ]; then
	touch "$HOME/.pathexts"
fi

while read line; do
	PATH=$PATH:$line
done < "$HOME/.pathexts"

export PATH

# Setup enviroment variables

export TERMINAL=konsole

# Some hosts have odd values for $TERM
case "$TERM" in
	"dumb"|"")
		TERM="xterm"
esac

export TERM
export TERMINAL=konsole

# Prompt
PREFIX="????"
PREFIX_BG=sgr0

if [ ! -z "$SUDO_UID" ]; then
	PREFIX="sudo"
elif [ ! -z "$XDG_SEAT" ]; then
	PREFIX="xwin"
elif [ ! -z "$SSH_CLIENT" ]; then
	if [ ! -z "$TMUX"] || [ "$TERM" == "screen" ]; then
		PREFIX_BG="dim"
		PREFIX="ssht"
	else
		PREFIX_BG="setab 1"
		PREFIX="ssh!"
	fi

fi

export PS1="\[$(tput $PREFIX_BG; tput setaf 2)\]$PREFIX\[$(tput sgr0)\] \[$(tput setaf 1)\]\u\[$(tput setaf 0)\]\[$(tput sgr0)\]@\[$(tput setaf 6)\]\h\[$(tput sgr0)\]: "

GIT_SUFFIX=""
case "$TERM" in
	"screen-256color"|"xterm-256color"|"xterm"|"linux"|"screen")
		GIT_PROMPT_FILE="/usr/share/git-core/contrib/completion/git-prompt.sh"

		if [ -f "$GIT_PROMPT_FILE" ]; then
			. $GIT_PROMPT_FILE
			GIT_PROMPT_ONLY_IN_REPO=1
			GIT_PS1_SHOWDIRTYSTATE=true
			
			GIT_SUFFIX="$(__git_ps1)"
		fi
esac

if [ -f /usr/libexec/z.sh ]; then
	source /usr/libexec/z.sh
fi

# alias's. 
alias ls='ls -F --color'
alias ll='ls -F --color -Alh | sed "s/.[\.\/]*\.git\/annex[a-zA-Z0-9\/\.\-]*/ git-annex /g" '
alias mkcd='mkcd [ -n "$1" ] && mkdir -p "$@" && cd "$1" '
alias tree='tree -AC'
alias profile-version='git log -1 ; git status'
alias profile-cptoroot="$sudo cp ~/.profile ~/.bashrc /root"
alias profile-getconf-vim='ln -sf ~/scripts/vimrc.txt ~/.vimrc '
alias profile-getconf-git='ln -sf ~/scripts/gitconfig.txt ~/.gitconfig '
alias profile-update='profile_update '
alias profile-puppet-apply-local="$sudo puppet apply --test < /etc/puppet/local.pp"
alias profile-el-install-epel6="$sudo rpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm"
alias profile-el-install-epel7="$sudo yum install epel-release"
alias profile_el_install_epel7="profile-el-install-epel7"
alias profile-el-install-azure="install_azure_repo"
alias profile-ownbox='ssh-copy-id $1 && scp ~/.profile $1:~/.profile'
alias profile-ffmpeg-concatscript-mp4='for f in ./*.MP4; do echo "file '\$\f' " >> mylist.txt; done'
alias profile-ffmpeg-go='ffmpeg -f concat -i mylist.txt -c copy output.mkv'
alias profile-rhn-system-id='grep ID- /etc/sysconfig/rhn/systemid'
alias profile-tiff2pdf='for pic in *.tif ; do tiff2pdf $pic > $pic.pdf; done'
alias profile-netscripts='cd /etc/sysconfig/network-scripts/ ; ls ifcfg* route*'
alias profile-box-bootstrap='profile_box_bootstrap'
alias profile-ansible-apply-local='profile_ansible_apply_local'
alias profile-git-clone-scripts='profile_git_clone_scripts'
alias grepria='grep -ria --exclude="\.svn*" '
alias netstatx='netstat -tapue --numeric-hosts --numeric-ports'
alias dfx='df -h -x tmpfs -x devtmpfs'
alias lsdisk='lshw -class disk'
alias lsdisks='lshw -class disk'
alias fw='firewall-cmd'
alias vimnotes='vim -c "r ~/scripts/template-notes.txt" '
alias sctl='systemctl'

if [ "$OSTYPE" == "darwin19" ]; then
alias ls='ls -G'
alias ll='ls -Gl'
fi

function profile_workspace_greyvar() {
	konsole --workdir  ~/sandbox/greyvar-client &
	konsole --workdir  ~/sandbox/greyvar-engine &
	konsole --workdir  ~/sandbox/greyvar-protocol &
	konsole --workdir  ~/sandbox/greyvar-server  &
}

function install_azure_repo() {
	sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
	sudo sh -c 'echo -e "[azure-cli]\nname=Azure CLI\nbaseurl=https://packages.microsoft.com/yumrepos/azure-cli\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/azure-cli.repo'
}

function profile_box_bootstrap() {
	if [ -f /etc/redhat-release ]; then
		if grep -i 'CentOS Linux release 7' /etc/redhat-release; then 
			profile_el_install_epel7
		fi

		$sudo yum install ansible git -y
	fi

	if [ -f /etc/debian_version ]; then
		$sudo apt-get install ansible git 
	fi


	profile_git_clone_scripts

	profile_ansible_apply_local
}

function profile_ansible_apply_local() {
	pushd ~/scripts/ansible-roles/
	make
	popd
}

function profile_git_clone_scripts() {
	if [[ -d ~/scripts ]]; then
		pushd ~/scripts/
		git pull
		popd
	else
		git clone https://github.com/jamesread/scripts.git ~/scripts/
	fi
}

function profile_update() {
	profile_git_clone_scripts

	ln -sf ~/scripts/profile.txt ~/.bashrc
	ln -sf ~/scripts/profile.txt ~/.profile

	source ~/.bashrc

	profile-getconf-git
	profile-getconf-vim

	profile-version
}

function profile-whatareyoudoing() {
	echo '=============== RPMS (non dist)'
	rpm -qa --qf '%{NAME} %{VENDOR}\n' | grep -v 'Fedora' | grep -v 'Red Hat' | grep -vi 'CentOS' | grep -v 'gpg-pubkey' | grep -vi 'rpm fusion'

	echo '=============== Network services'
	netstat -ntaupe | grep -i LISTEN | grep -v systemd | grep -v 'systemd\|sshd' 

	echo '=============== Docker PS'
	docker ps -q 

	
	echo '=============== Home dirs'
	ls /home/

	echo '=============== jwrFs'
	ls /jwrFs/

	echo '=============== /var/www/html'
	ls /var/www/html/
}

# language
export LANG="en_GB.utf-8"
export LC_ALL="en_GB.utf-8"
export LC_COLORS=1

# make bash suck less
shopt -s checkwinsize

export VISUAL=vim
export SVN_EDITOR=vim

export VAGRANT_DEFAULT_PROVIDER=libvirt

unset SSH_ASKPASS
unset command_not_found_handle

# scanner - found with sane-find-scanner
export SANE_DEFAULT_DEVICE="imagescan:esci:usb:/sys/devices/pci0000:00/0000:00:14.0/usb2/2-2/2-2:1.0"

# End of profile
